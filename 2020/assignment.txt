[This file](https://github.com/MannyMoo/SUPAPYT-assignments/raw/master/2020/small-body-db.csv) contains a subset of data taken from the [JPL Small-Body Database](https://ssd.jpl.nasa.gov/sbdb_query.cgi). Each row in the file represents one asteroid or comet that's been observed and tracked by NASA. The names of the columns are on the first line. The meaning of each column is described [here](https://raw.githubusercontent.com/MannyMoo/SUPAPYT-assignments/master/2020/columns.txt).

The [csv module](https://docs.python.org/3/library/csv.html) is very useful for reading such files, particularly the [DictReader class](https://docs.python.org/3/library/csv.html#csv.DictReader).

Download [the data file](https://github.com/MannyMoo/SUPAPYT-assignments/raw/master/2020/small-body-db.csv) and write a script/module/package to read in the file and output the following information:

1) The names of the objects with the smallest and largest minimum orbit intersection distance (MOID) to Earth (the "moid" column). Not all entries have a "moid" value - those without one should be ignored.

2) The mean and standard deviation of the diameters of the objects (the "diameter" column).

3) The min, max, mean and standard deviation of the MOID to Earth for objects with the Near-Earth Object flag = Y ("neo" column), and for objects with the Potentially Hazardous Asteroid flag = Y ("pha" column).

4) How many objects have been found by each person/institution ("producer" column).

5) The names of the objects with the earliest and latest first observation ("first_obs" column).

6) The mean absolute magnitude ("H") of objects with first observation in each decade (group the objects according to the decade of their first observation and calculate the mean "H" for each group). A decade is defined as, eg, 2000-01-01 to 2009-12-31 inclusive.

For a given problem, an entry in the database should be skipped if it doesn't have a value for all the required columns.

Only [standard library](https://docs.python.org/3/library/) modules are allowed, no 3rd party ones (so no Pandas or numpy, etc). 

Please submit your solution .py files via this page. A jupyter notebook is also acceptable. I'll execute your code, with the data file in the same directory, to check its results and assess how well it's written and structured, and how it makes use of python functionality. Keep in mind the [coding tips](https://mannymoo.github.io/IntroductionToPython/SUPAPYT-IntroductionToPython.html#A-Few-Tips) from the end of the lectures. 

Please [email me](michael.alexander@glasgow.ac.uk) or use the [discussion forum](https://my.supa.ac.uk/mod/forum/view.php?id=14579) if anything's unclear.
